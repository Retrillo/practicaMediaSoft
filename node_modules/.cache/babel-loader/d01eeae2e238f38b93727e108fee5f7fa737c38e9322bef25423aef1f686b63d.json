{"ast":null,"code":"// redux/reducers.js\n\nconst initialState = {\n  cart: []\n};\nfunction cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const existingProductIndex = state.cart.findIndex(product => product.id === action.payload.id);\n      if (existingProductIndex !== -1) {\n        const updatedCart = [...state.cart];\n        updatedCart[existingProductIndex].quantity += 1;\n        console.log('Updated cart:', updatedCart); // Для отладки\n        return {\n          ...state,\n          cart: updatedCart\n        };\n      } else {\n        const newCart = [...state.cart, {\n          ...action.payload,\n          quantity: 1\n        }];\n        console.log('New cart:', newCart); // Для отладки\n        return {\n          ...state,\n          cart: newCart\n        };\n      }\n    case 'REMOVE_FROM_CART':\n      const updatedCart = state.cart.filter(product => product.id !== action.payload.id);\n      console.log('Updated cart after removal:', updatedCart); // Для отладки\n      return {\n        ...state,\n        cart: updatedCart\n      };\n    default:\n      return state;\n  }\n}\nexport default cartReducer;","map":{"version":3,"names":["initialState","cart","cartReducer","state","action","type","existingProductIndex","findIndex","product","id","payload","updatedCart","quantity","console","log","newCart","filter"],"sources":["C:/Users/strig/Desktop/12345/src/redux/reducers.js"],"sourcesContent":["// redux/reducers.js\r\n\r\nconst initialState = {\r\n  cart: [],\r\n};\r\n\r\nfunction cartReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      const existingProductIndex = state.cart.findIndex(product => product.id === action.payload.id);\r\n      \r\n      if (existingProductIndex !== -1) {\r\n        const updatedCart = [...state.cart];\r\n        updatedCart[existingProductIndex].quantity += 1;\r\n        console.log('Updated cart:', updatedCart);  // Для отладки\r\n        return { ...state, cart: updatedCart };\r\n      } else {\r\n        const newCart = [...state.cart, { ...action.payload, quantity: 1 }];\r\n        console.log('New cart:', newCart);  // Для отладки\r\n        return { ...state, cart: newCart };\r\n      }\r\n\r\n    case 'REMOVE_FROM_CART':\r\n      const updatedCart = state.cart.filter(product => product.id !== action.payload.id);\r\n      console.log('Updated cart after removal:', updatedCart);  // Для отладки\r\n      return { ...state, cart: updatedCart };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default cartReducer;\r\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AAED,SAASC,WAAWA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,EAAE;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,MAAMC,oBAAoB,GAAGH,KAAK,CAACF,IAAI,CAACM,SAAS,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;MAE9F,IAAIH,oBAAoB,KAAK,CAAC,CAAC,EAAE;QAC/B,MAAMK,WAAW,GAAG,CAAC,GAAGR,KAAK,CAACF,IAAI,CAAC;QACnCU,WAAW,CAACL,oBAAoB,CAAC,CAACM,QAAQ,IAAI,CAAC;QAC/CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,WAAW,CAAC,CAAC,CAAE;QAC5C,OAAO;UAAE,GAAGR,KAAK;UAAEF,IAAI,EAAEU;QAAY,CAAC;MACxC,CAAC,MAAM;QACL,MAAMI,OAAO,GAAG,CAAC,GAAGZ,KAAK,CAACF,IAAI,EAAE;UAAE,GAAGG,MAAM,CAACM,OAAO;UAAEE,QAAQ,EAAE;QAAE,CAAC,CAAC;QACnEC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,OAAO,CAAC,CAAC,CAAE;QACpC,OAAO;UAAE,GAAGZ,KAAK;UAAEF,IAAI,EAAEc;QAAQ,CAAC;MACpC;IAEF,KAAK,kBAAkB;MACrB,MAAMJ,WAAW,GAAGR,KAAK,CAACF,IAAI,CAACe,MAAM,CAACR,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;MAClFI,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,WAAW,CAAC,CAAC,CAAE;MAC1D,OAAO;QAAE,GAAGR,KAAK;QAAEF,IAAI,EAAEU;MAAY,CAAC;IAExC;MACE,OAAOR,KAAK;EAChB;AACF;AAEA,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}