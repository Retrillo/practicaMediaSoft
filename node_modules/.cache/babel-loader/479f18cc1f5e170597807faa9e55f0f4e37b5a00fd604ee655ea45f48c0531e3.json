{"ast":null,"code":"// redux/reducers.js\n\nconst initialState = {\n  cart: []\n};\nfunction cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      // Проверяем, есть ли уже этот товар в корзине\n      const existingProductIndex = state.cart.findIndex(product => product.id === action.payload.id);\n      if (existingProductIndex !== -1) {\n        // Если товар есть, увеличиваем его количество\n        const updatedCart = [...state.cart];\n        updatedCart[existingProductIndex].quantity += 1;\n        return {\n          ...state,\n          cart: updatedCart\n        };\n      } else {\n        // Если товара нет в корзине, добавляем новый\n        return {\n          ...state,\n          cart: [...state.cart, {\n            ...action.payload,\n            quantity: 1\n          }]\n        };\n      }\n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        cart: state.cart.filter(product => product.id !== action.payload.id)\n      };\n    default:\n      return state;\n  }\n}\nexport default cartReducer;","map":{"version":3,"names":["initialState","cart","cartReducer","state","action","type","existingProductIndex","findIndex","product","id","payload","updatedCart","quantity","filter"],"sources":["C:/Users/strig/Desktop/12345/src/redux/reducers.js"],"sourcesContent":["// redux/reducers.js\r\n\r\nconst initialState = {\r\n  cart: [],\r\n};\r\n\r\nfunction cartReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      // Проверяем, есть ли уже этот товар в корзине\r\n      const existingProductIndex = state.cart.findIndex(product => product.id === action.payload.id);\r\n      \r\n      if (existingProductIndex !== -1) {\r\n        // Если товар есть, увеличиваем его количество\r\n        const updatedCart = [...state.cart];\r\n        updatedCart[existingProductIndex].quantity += 1;\r\n        return { ...state, cart: updatedCart };\r\n      } else {\r\n        // Если товара нет в корзине, добавляем новый\r\n        return { ...state, cart: [...state.cart, { ...action.payload, quantity: 1 }] };\r\n      }\r\n\r\n    case 'REMOVE_FROM_CART':\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter(product => product.id !== action.payload.id),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default cartReducer;\r\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AAED,SAASC,WAAWA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,EAAE;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB;MACA,MAAMC,oBAAoB,GAAGH,KAAK,CAACF,IAAI,CAACM,SAAS,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;MAE9F,IAAIH,oBAAoB,KAAK,CAAC,CAAC,EAAE;QAC/B;QACA,MAAMK,WAAW,GAAG,CAAC,GAAGR,KAAK,CAACF,IAAI,CAAC;QACnCU,WAAW,CAACL,oBAAoB,CAAC,CAACM,QAAQ,IAAI,CAAC;QAC/C,OAAO;UAAE,GAAGT,KAAK;UAAEF,IAAI,EAAEU;QAAY,CAAC;MACxC,CAAC,MAAM;QACL;QACA,OAAO;UAAE,GAAGR,KAAK;UAAEF,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAI,EAAE;YAAE,GAAGG,MAAM,CAACM,OAAO;YAAEE,QAAQ,EAAE;UAAE,CAAC;QAAE,CAAC;MAChF;IAEF,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGT,KAAK;QACRF,IAAI,EAAEE,KAAK,CAACF,IAAI,CAACY,MAAM,CAACL,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE;MACrE,CAAC;IAEH;MACE,OAAON,KAAK;EAChB;AACF;AAEA,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}