{"ast":null,"code":"// redux/reducers.js\n\nconst initialState = {\n  cart: []\n};\nfunction cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      {\n        // Ищем, есть ли уже такой товар в корзине\n        const existingProductIndex = state.cart.findIndex(product => product.id === action.payload.id);\n        if (existingProductIndex !== -1) {\n          // Если товар есть, увеличиваем его количество\n          const updatedCart = [...state.cart];\n          updatedCart[existingProductIndex].quantity += 1;\n          return {\n            ...state,\n            cart: updatedCart\n          };\n        } else {\n          // Если товара нет в корзине, добавляем его\n          const newCart = [...state.cart, {\n            ...action.payload,\n            quantity: 1\n          }];\n          return {\n            ...state,\n            cart: newCart\n          };\n        }\n      }\n    case 'REMOVE_FROM_CART':\n      {\n        // Удаляем товар из корзины\n        const updatedCart = state.cart.filter(product => product.id !== action.payload);\n        return {\n          ...state,\n          cart: updatedCart\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport default cartReducer;","map":{"version":3,"names":["initialState","cart","cartReducer","state","action","type","existingProductIndex","findIndex","product","id","payload","updatedCart","quantity","newCart","filter"],"sources":["C:/Users/strig/Desktop/12345/src/redux/reducers.js"],"sourcesContent":["// redux/reducers.js\r\n\r\nconst initialState = {\r\n  cart: [],\r\n};\r\n\r\nfunction cartReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART': {\r\n      // Ищем, есть ли уже такой товар в корзине\r\n      const existingProductIndex = state.cart.findIndex(\r\n        (product) => product.id === action.payload.id\r\n      );\r\n\r\n      if (existingProductIndex !== -1) {\r\n        // Если товар есть, увеличиваем его количество\r\n        const updatedCart = [...state.cart];\r\n        updatedCart[existingProductIndex].quantity += 1;\r\n\r\n        return { ...state, cart: updatedCart };\r\n      } else {\r\n        // Если товара нет в корзине, добавляем его\r\n        const newCart = [...state.cart, { ...action.payload, quantity: 1 }];\r\n        return { ...state, cart: newCart };\r\n      }\r\n    }\r\n\r\n    case 'REMOVE_FROM_CART': {\r\n      // Удаляем товар из корзины\r\n      const updatedCart = state.cart.filter(\r\n        (product) => product.id !== action.payload\r\n      );\r\n      return { ...state, cart: updatedCart };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default cartReducer;\r\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AAED,SAASC,WAAWA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,EAAE;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAAE;QAClB;QACA,MAAMC,oBAAoB,GAAGH,KAAK,CAACF,IAAI,CAACM,SAAS,CAC9CC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAC7C,CAAC;QAED,IAAIH,oBAAoB,KAAK,CAAC,CAAC,EAAE;UAC/B;UACA,MAAMK,WAAW,GAAG,CAAC,GAAGR,KAAK,CAACF,IAAI,CAAC;UACnCU,WAAW,CAACL,oBAAoB,CAAC,CAACM,QAAQ,IAAI,CAAC;UAE/C,OAAO;YAAE,GAAGT,KAAK;YAAEF,IAAI,EAAEU;UAAY,CAAC;QACxC,CAAC,MAAM;UACL;UACA,MAAME,OAAO,GAAG,CAAC,GAAGV,KAAK,CAACF,IAAI,EAAE;YAAE,GAAGG,MAAM,CAACM,OAAO;YAAEE,QAAQ,EAAE;UAAE,CAAC,CAAC;UACnE,OAAO;YAAE,GAAGT,KAAK;YAAEF,IAAI,EAAEY;UAAQ,CAAC;QACpC;MACF;IAEA,KAAK,kBAAkB;MAAE;QACvB;QACA,MAAMF,WAAW,GAAGR,KAAK,CAACF,IAAI,CAACa,MAAM,CAClCN,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACM,OACrC,CAAC;QACD,OAAO;UAAE,GAAGP,KAAK;UAAEF,IAAI,EAAEU;QAAY,CAAC;MACxC;IAEA;MACE,OAAOR,KAAK;EAChB;AACF;AAEA,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}